<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.orange.library</groupId>
		<artifactId>library</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<artifactId>library-provider-cxf</artifactId>
	<packaging>jar</packaging>
	<name>${project.artifactId}(${project.packaging})</name>

	<dependencies>

		<dependency>
			<groupId>com.orange.library</groupId>
			<artifactId>library-technicalservice</artifactId>
		</dependency>

		<dependency>
			<groupId>com.orange.library</groupId>
			<artifactId>library-model</artifactId>
		</dependency>

		<dependency>
			<groupId>com.orange.library</groupId>
			<artifactId>library-application</artifactId>
		</dependency>

		<dependency>
			<groupId>com.orange.library</groupId>
			<artifactId>library-provider-wsdl</artifactId>
		</dependency>

		<!-- dozer -->
		<dependency>
			<groupId>net.sf.dozer</groupId>
			<artifactId>dozer</artifactId>
		</dependency>
		
		<dependency>
		  <groupId>org.slf4j</groupId>
		  <artifactId>slf4j-api</artifactId>
		</dependency>

	</dependencies>

	<build>
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<filtering>true</filtering>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<!-- generate java source files from wsdl (wsdl2java) -->
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-codegen-plugin</artifactId>
				<executions>
					<execution>
						<id>generate-sources-composite</id>
						<phase>generate-sources</phase>
						<configuration>
							<wsdlOptions>
								<wsdlOption>
									<wsdl>${project.build.directory}/wsdl/managemarket-1.0.wsdl</wsdl>
									<!-- wsdl namespace - java package mapping -->
									<extraargs>
										<extraarg>-p</extraarg>
										<extraarg>http://www.orange.com/Interfaces/ManageMarket/v1/model=${project.groupId}.providersoap.model</extraarg>
										<extraarg>-p</extraarg>
										<extraarg>http://www.orange.com/Interfaces/ManageMarket/v1/exception=${project.groupId}.providersoap.exception</extraarg>
										<extraarg>-p</extraarg>
										<extraarg>http://www.orange.com/Interfaces/ManageMarket/v1=${project.groupId}.providersoap.service</extraarg>
									</extraargs>
								</wsdlOption>
							</wsdlOptions>
						</configuration>
						<goals>
							<goal>wsdl2java</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Needed with Eclipse Indigo / m2e 1.0 because there are no m2e connectors for cxf-codegen-plugin for the moment -->
			<!-- This declaration will force m2e to define target/generated-sources/cxf as a source folder in Eclipse -->
			<plugin>
		        <groupId>org.codehaus.mojo</groupId>
		        <artifactId>build-helper-maven-plugin</artifactId>
	        <executions>
				<execution>
					<id>add-source</id>
					<phase>generate-sources</phase>
					<goals>
						<goal>add-source</goal>
					</goals>
					<configuration>
						<sources>
							<source>${project.build.directory}/generated-sources/cxf</source>
						</sources>
					</configuration>
				</execution>
		        </executions>
			</plugin> 			
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>run_from_eclipse_m2e</id>
			<activation>
				<property>
					<!-- This property is set by default when using eclipse m2e -->
					<name>m2e.version</name>
				</property>
			</activation>
			<build>
				<plugins>
					<!-- copy wsdl and xsds so that they can be used to generate java bindings -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-deployment</id>
								<!-- should be done before generate-sources -->
								<phase>initialize</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/wsdl</outputDirectory>
									<resources>
										<resource>
											<directory>${basedir}/../${project.parent.artifactId}-provider-wsdl/target/classes/wsdl</directory>
											<includes>
												<include>**/*.wsdl</include>
												<include>**/*.xsd</include>
											</includes>
										</resource>
									</resources>
								</configuration> 	
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>run_from_command_line</id>
			<activation>
				<property>
					<name>!m2e.version</name>
				</property>
			</activation>
			<build>
				<plugins>
					<!-- unpack deployment jar containing wsdl and xsds so that they can be used to generate java bindings -->
					<!-- cannot be used within eclipse because source is a directory. See http://jira.codehaus.org/browse/MDEP-98 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>unpack-deployment</id>
								<!-- should be done before generate-sources -->
								<phase>initialize</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>${project.groupId}</groupId>
											<artifactId>${project.parent.artifactId}-provider-wsdl</artifactId>
											<overWrite>true</overWrite>
											<outputDirectory>${project.build.directory}</outputDirectory>
											<includes>**/*.xsd,**/*.wsdl</includes> 	
										</artifactItem>
									</artifactItems>
								</configuration> 	
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
