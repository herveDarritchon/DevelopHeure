<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

<!-- 	<parent>
		<groupId>com.francetelecom.maven</groupId>
		<artifactId>pom-corporate</artifactId>
		<version>3.0</version>
	</parent> -->

	<groupId>com.orange.librarypackage</groupId>
	<artifactId>library</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>${project.artifactId}(${project.packaging})</name>
	<url>http://${project.artifactId}.orangeforge.rd.francetelecom.fr/website/${project.artifactId}-${project.version}</url>

	<properties>
		<!-- jboss 7.2.0/java7 is the standard platform -->
		<!-- To change default Application Server and/or Database, please configure myappli-war/src/main/resources/myappli.properties -->

		<!-- change to 1.6 if using Jonas on java 1.6 -->
		<java.version>1.7</java.version>
		<!-- JOnAS 5 compatibility. On JBoss platform, should be updated to javax.servlet-api:3.0.1  -->
		<servlet.version>2.5</servlet.version>
		<!-- JOnAS 5 compatibility. On JBoss platform, should be updated to 6  -->
		<jee.version>5</jee.version>

		<!-- main frameworks versions -->
		<spring.version>3.2.3.RELEASE</spring.version>
		<cxf.version>2.7.5</cxf.version>
		<dozer.version>5.4.0</dozer.version>
		<slf4j.version>1.7.5</slf4j.version>
		<logback.version>1.0.13</logback.version>
		<junit.version>4.11</junit.version>
		<mockito.version>1.9.5</mockito.version>
		<cargo.version>1.4.4</cargo.version>

		<!-- default values for local deployment, could be overridden by a profile (see DEV example) -->
		<config.jonas.containerId>jonas5x</config.jonas.containerId>
		<config.jonasJmxServer>localhost</config.jonasJmxServer>
		<config.jonasJmxPort>1099</config.jonasJmxPort>
		<config.cargoRemoteUsername>jonas</config.cargoRemoteUsername>
		<config.cargoRemotePassword>jonas</config.cargoRemotePassword>
		<config.cargoJonasDomainName>jonas</config.cargoJonasDomainName>
		<config.cargoJonasServerName>jonas</config.cargoJonasServerName>

		<config.jboss.version>7.2.0.Final</config.jboss.version>
		<config.jboss.containerId>jboss72x</config.jboss.containerId>
		<config.jboss.hostname>localhost</config.jboss.hostname>
		<config.jboss.management-native.port>9999</config.jboss.management-native.port>

		<project.build.sourceEncoding>ISO-8859-15</project.build.sourceEncoding>

		<!-- displayed on login page (login.jsp) -->
	    <build.timestamp>${maven.build.timestamp}</build.timestamp>
	    <maven.build.timestamp.format>dd/MM/yyyy - HH:mm:ss</maven.build.timestamp.format>
	</properties>

	<organization>
		<name>France Telecom - DSIG</name>
		<url>http://devteam.itn.ftgroup/index.php</url>
	</organization>

	<issueManagement>
		<system>Sonar</system>
		<url>http://xxxxxx.intranet-paris.francetelecom.fr:9200/sonar/</url>
	</issueManagement>

	<ciManagement>
		<system>Hudson</system>
		<url>http://xxxxxx.intranet-paris.francetelecom.fr:9200/hudson/</url>
	</ciManagement>

	<scm>
		<connection>scm:svn:https://orangeforge.rd.francetelecom.fr/svnroot/${project.artifactId}/trunk</connection>
		<developerConnection>scm:svn:https://orangeforge.rd.francetelecom.fr/svnroot/${project.artifactId}/trunk</developerConnection>
	</scm>


	<!-- Site deployment -->
	<distributionManagement>
		<site>
			<id>codendi</id>
			<name>${project.artifactId} Web Site</name>
			<url>sftp://orangeforge.rd.francetelecom.fr/home/groups/${project.artifactId}/htdocs/website/${project.artifactId}-${project.version}</url>
		</site>
	</distributionManagement>

	<dependencyManagement>
		<dependencies>

			<!-- ===================== -->
			<!-- application libraries -->
			<!-- ===================== -->
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>library-technicalservice</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>

			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>library-model</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>

			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>library-application</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>

			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>library-business</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>

			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>library-consumer-wsdl</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>

			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>library-consumer-cxf</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>

			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>library-provider-wsdl</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>

			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>library-provider-cxf</artifactId>
				<version>0.0.1-SNAPSHOT</version>
			</dependency>

			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>library-war</artifactId>
				<version>0.0.1-SNAPSHOT</version>
				<type>war</type>
			</dependency>

			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>library-ear</artifactId>
				<version>0.0.1-SNAPSHOT</version>
				<type>ear</type>
			</dependency>


			<!-- =================== -->
			<!-- framework libraries -->
			<!-- =================== -->

			<!-- ******************* -->
			<!-- Spring dependencies -->
			<!-- ******************* -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.version}</version>
			</dependency>


			<!-- spring-test only used with junit tests -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- cglib is needed with spring because cxf is proxying classes -->
			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib-nodep</artifactId>
				<version>2.1_3</version>
			</dependency>

			<!-- JEE6 is not available on Jonas 5.2.x  -->
			<!-- on JBoss platform, dependency should be updated to javax.servlet-api:3.0.1  -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${servlet.version}</version>
				<scope>provided</scope>
			</dependency>

			<!-- **************** -->
			<!-- CXF dependencies -->
			<!-- **************** -->

			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxws</artifactId>
				<version>${cxf.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http</artifactId>
				<version>${cxf.version}</version>
			</dependency>

			<!-- This library is scoped as runtime so that it is included in the war and to avoid ClassNotFoundException: javax.xml.transform.stax.StAXSource with Jonas 5.2.x -->
			<!-- Not needed with JBoss, this library is in the JDK --> 
			<dependency>
				<groupId>javax.xml</groupId>
				<artifactId>jaxp-api</artifactId>
				<version>1.4.2</version>
				<scope>runtime</scope>
			</dependency>
	

			<!-- dozer dependency -->
			<dependency>
				<groupId>net.sf.dozer</groupId>
				<artifactId>dozer</artifactId>
				<version>${dozer.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- ******************** -->
			<!-- Logging dependencies -->
			<!-- ******************** -->
			<!-- slf4j + logback + commons logging (JCL) and log4j bridges -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>log4j-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- test dependencies are defined for all sub modules -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.5</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.4</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.4</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-rar-plugin</artifactId>
					<version>2.3</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.15</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.3</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.8</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.7</version>
				</plugin>

				<!-- JEE6 is not available on Jonas 5.2.x  -->
				<!-- on JBoss platform, version should be updated to 6 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-ear-plugin</artifactId>
					<version>2.8</version>
					<configuration>
						<version>${jee.version}</version>
					</configuration>
				</plugin>


				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.6</version>
					<!-- required on continuous integration platform -->
					<configuration>
						<encoding>ISO-8859-15</encoding>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>2.9</version>
					<configuration>
						<downloadSources>true</downloadSources>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.3</version>
					<configuration>
						<inputEncoding>ISO-8859-15</inputEncoding>
						<outputEncoding>UTF-8</outputEncoding>
					</configuration>
				</plugin>

				<!-- This definition is used to generate standalone javadocs -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.9.1</version>
					<configuration>
						<encoding>ISO-8859-15</encoding>
						<javadocVersion>1.6</javadocVersion>
					</configuration>
					<executions>
						<execution>
							<id>aggregate</id>
							<goals>
								<goal>aggregate</goal>
							</goals>
							<phase>site</phase>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.codehaus.cargo</groupId>
					<artifactId>cargo-maven2-plugin</artifactId>
					<version>${cargo.version}</version>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.8</version>
				</plugin>

				<plugin>
					<groupId>org.apache.cxf</groupId>
					<artifactId>cxf-codegen-plugin</artifactId>
					<version>${cxf.version}</version>
				</plugin>
				
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
				<!-- Needed with Eclipse Indigo / m2e 1.0 because there are no m2e connectors for cxf-codegen-plugin for the moment -->
				<!-- See http://wiki.eclipse.org/M2E_plugin_execution_not_covered -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.cxf</groupId>
										<artifactId>cxf-codegen-plugin</artifactId>
										<versionRange>[2.2.1,)</versionRange>
										<goals>
											<goal>wsdl2java</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute/>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.3,)</versionRange>
										<goals>
											<goal>unpack</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<!-- cannot execute because with m2e, the source is a directory. See http://jira.codehaus.org/browse/MDEP-98 -->
										<ignore/>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-ear-plugin</artifactId>
										<versionRange>[2.6,)</versionRange>
										<goals>
											<goal>generate-application-xml</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore/>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.8,)</versionRange>
										<goals>
											<goal>analyze-dep-mgt</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore/>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<!-- ensure dependency version are not overridden, build fail if bad dependency management -->
				<executions>
					<execution>
						<goals>
							<goal>analyze-dep-mgt</goal>
						</goals>
						<phase>validate</phase>
						<configuration>
							<failBuild>true</failBuild>
							<ignoreDirect>false</ignoreDirect>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<!-- This definition is used to generate javadocs during site generation -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
				<configuration>
					<encoding>ISO-8859-15</encoding>
					<javadocVersion>1.6</javadocVersion>
					<stylesheet>maven</stylesheet>
					<detectLinks>false</detectLinks>
				</configuration>
				<reportSets>
					<reportSet>
						<id>non-aggregate</id>
						<reports>
							<report>javadoc</report>
						</reports>
					</reportSet>
					<reportSet>
						<id>aggregate</id>
						<reports>
							<report>aggregate</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<!-- example. Choose this profile for remote deployment on linux development platform -->
		<profile>
			<id>dev</id>
			<!-- choose this profile for remote deployment on linux development platform -->
			<activation>
			</activation>
			<properties>
				<config.jonas.containerId>jonas5x</config.jonas.containerId>
				<config.jonasJmxServer>xxxxxx.intranet-paris.francetelecom.fr</config.jonasJmxServer>
				<config.jonasJmxPort>1099</config.jonasJmxPort>
				<config.cargoRemoteUsername>jonas</config.cargoRemoteUsername>
				<config.cargoRemotePassword>jonas</config.cargoRemotePassword>
				<config.cargoJonasDomainName>jonas5xxxwas</config.cargoJonasDomainName>
				<config.cargoJonasServerName>jonas5xxxwas</config.cargoJonasServerName>

				<config.jboss.version>7.2.0.Final</config.jboss.version>
				<config.jboss.containerId>jboss72x</config.jboss.containerId>
				<config.jboss.hostname>xxxxxx.intranet-paris.francetelecom.fr</config.jboss.hostname>
				<config.jboss.management-native.port>9999</config.jboss.management-native.port>
			</properties>
		</profile>

	</profiles>


  <modules>
    <module>library-technicalservice</module>
    <module>library-model</module>
    <module>library-application</module>
    <module>library-business</module>
    <module>library-consumer-wsdl</module>
    <module>library-consumer-cxf</module>
    <module>library-provider-wsdl</module>
    <module>library-provider-cxf</module>
    <module>library-war</module>
    <module>library-ear</module>
    <module>library-tar</module>
  </modules>
</project>